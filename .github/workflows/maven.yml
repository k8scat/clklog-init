# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    tags:
      - 'v*'
jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 8
      uses: actions/setup-java@v3
      with:
        java-version: '8'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml

    - run: mkdir staging && cp target/*.jar staging
    - uses: actions/upload-artifact@v4
      with:
        name: Package
        path: staging
    # 设置 jobs Maven pom 版本环境变量
    - name: Set Release version env variable
      run: |
        echo "RELEASE_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV
        
    # 上传文件并发布 Release
    - uses: "marvinpinto/action-automatic-releases@latest"
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        automatic_release_tag: "${{ env.RELEASE_VERSION }}"
        prerelease: false
        title: "Release ${{ env.RELEASE_VERSION }}"
        files: |
          staging/*.jar
    
    - name: Retrieve git tag
      id: git-tag
      run: |
        echo "GIT_TAG=$(git describe --tags --abbrev=0)" >> $GITHUB_ENV
    
    - name: Build and push image
      run: |
        docker login -u '${{ secrets.TCR_USERNAME }}' -p ${{ secrets.TCR_PASSWORD }} ${{ secrets.TCR_REGISTRY }}
        docker build \
          --build-arg JAR_FILE=staging/clklog-init-${{ env.RELEASE_VERSION }}.jar \
          -t ${{ secrets.TCR_REGISTRY }}/prod/clklog-init:${{ env.GIT_TAG }} .
        docker push ${{ secrets.TCR_REGISTRY }}/prod/clklog-init:${{ env.GIT_TAG }}
